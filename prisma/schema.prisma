// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id        String   @id @default(cuid())
  userName  String
  phone     String
  password  String
  role      String
  createdAt DateTime @default(now())
  orders    Order[]
}

model Customer {
  id            String           @id @default(cuid())
  phone         String           @unique
  name          String
  loyaltyPoints Int
  firstBoughtAt DateTime
  orders        Order[]
  purchaseHistory PurchaseHistory[]
}

model Category {
  id    String   @id @default(cuid())
  name  String
  photo String
  products Product[]
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String
  photo       String
  categoryId  String
  stock       Int
  isAvailable Boolean
  promotion   String
  createdAt   DateTime    @default(now())
  category    Category    @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
  promotions  Promotion[]
  purchaseHistory PurchaseHistory[]
}

model Order {
  id           String    @id @default(cuid())
  customerId   String
  employeeId   String
  totalPrice   Float
  paidCash     Float
  returnCash   Float
  purchaseDate DateTime  @default(now())
  customer     Customer  @relation(fields: [customerId], references: [id])
  employee     Employee  @relation(fields: [employeeId], references: [id])
  orderItems   OrderItem[]
}

model OrderItem {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model PurchaseHistory {
  id           String   @id @default(cuid())
  customerId   String
  productId    String
  purchaseDate DateTime @default(now())
  customer     Customer @relation(fields: [customerId], references: [id])
  product      Product  @relation(fields: [productId], references: [id])
}

model Promotion {
  id        String   @id @default(cuid())
  productId String
  type      String
  startDate DateTime
  endDate   DateTime
  product   Product  @relation(fields: [productId], references: [id])
}